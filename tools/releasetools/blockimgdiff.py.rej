--- tools/releasetools/blockimgdiff.py
+++ tools/releasetools/blockimgdiff.py
@@ -26,6 +26,12 @@
 import threading
 import tempfile
 
+try:
+  from backports import lzma
+except ImportError:
+  lzma = None
+  pass
+
 from rangelib import RangeSet
 
 
@@ -237,7 +243,7 @@ def __str__(self):
 # original image.
 
 class BlockImageDiff(object):
-  def __init__(self, tgt, src=None, threads=None, version=3):
+  def __init__(self, tgt, src=None, threads=None, version=3, use_lzma=False):
     if threads is None:
       threads = multiprocessing.cpu_count() // 2
       if threads == 0:
@@ -247,6 +253,7 @@ def __init__(self, tgt, src=None, threads=None, version=3):
     self.transfers = []
     self.src_basenames = {}
     self.src_numpatterns = {}
+    self.use_lzma = use_lzma
 
     assert version in (1, 2, 3)
 
@@ -609,7 +616,15 @@ def ComputePatches(self, prefix):
     print("Reticulating splines...")
     diff_q = []
     patch_num = 0
-    with open(prefix + ".new.dat", "wb") as new_f:
+
+    if lzma and self.use_lzma:
+        open_patch = lzma.open
+        new_file = ".new.dat.xz"
+    else:
+        open_patch = open
+        new_file = ".new.dat"
+
+    with open_patch(prefix + new_file, "wb") as new_f:
       for xf in self.transfers:
         if xf.style == "zero":
           pass
